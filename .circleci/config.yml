# Versión 2.1 es el estándar para usar orbs y features avanzadas
version: 2.1

# -----------------
# Orbs (Librerías externas)
# -----------------
orbs:
  node: circleci/node@5.1.0
  slack: circleci/slack@4 # Orb de Slack (actualmente sin usar)

# -----------------
# Jobs: La unidad de trabajo de CircleCI
# -----------------
jobs:
  # 1. SETUP & INSTALL (Checkout + Install Dependencies)
  setup-and-install:
    docker:
      - image: cimg/node:20.11 # Imagen LTS de Node.js recomendada
    steps:
      - checkout
      - node/install-packages
      - persist_to_workspace:
          root: .
          paths:
            - node_modules
            - .

  # 2. BUILD, TEST & LINT
  test-and-lint:
    docker:
      - image: cimg/node:20.11
    steps:
      - attach_workspace:
          at: .
      - run:
          name: Run Build
          command: npm run build
      - run:
          name: Run Tests
          command: npm test
      - run:
          name: Run Lint
          command: npm run lint
      - persist_to_workspace:
          root: .
          paths:
            - dist

  # 3. DEPLOY (Simulación del despliegue)
  deploy-simulate:
    docker:
      - image: cimg/base:2024.01
    steps:
      - attach_workspace:
          at: .
      - run:
          name: Simulate Deployment
          command: |
            echo "--- Inicio de Simulación de Despliegue ---"
            echo "Archivos listos para despliegue encontrados en 'dist/'"
            echo "En un entorno real, esta etapa ejecutaría un script de despliegue SSH o a un servicio cloud."
            ls -l dist
            echo "--- Fin de Simulación ---"
      - store_artifacts:
          path: dist
          destination: build-artifacts

# -----------------
# Workflows: Define la lógica y secuencia de los jobs
# -----------------
workflows:
  build-test-deploy:
    jobs:
      - setup-and-install
      - test-and-lint:
          requires:
            - setup-and-install
      - deploy-simulate:
          requires:
            - test-and-lint
          # Comentamos las notificaciones de Slack hasta tener las variables configuradas
          # post-steps:
          #   - slack/notify: # Notificación de Éxito
          #       event: pass
          #       channel: "#circleci-alerts"
          #       template: success_with_artifacts
          #   - slack/notify: # Notificación de Fallo
          #       event: fail
          #       channel: "#circleci-alerts"
          #       template: basic_fail
